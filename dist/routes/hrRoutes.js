"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const onBoardingController_1 = require("../controllers/onBoardingController");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const resignationController_1 = require("../controllers/resignationController");
const checkPermissions_1 = require("../middlewares/checkPermissions");
const router = (0, express_1.Router)();
router.use(authMiddleware_1.authenticateToken);
router.get('/resignation/all', (0, checkPermissions_1.checkPermission)("Resignation", "approve"), resignationController_1.getResignations);
router.get('/resignation/:id', (0, checkPermissions_1.checkPermission)("Resignation", "view"), resignationController_1.getResignationById);
router.get('/user/my', (0, checkPermissions_1.checkPermission)("Resignation", "view"), resignationController_1.getMyResignation);
router.put('/resignation/:id', (0, checkPermissions_1.checkPermission)("Resignation", "update"), resignationController_1.updateResignation);
router.delete('/resignation/:id', (0, checkPermissions_1.checkPermission)("Resignation", "delete"), resignationController_1.deleteResignation);
// router.use(isAdminOrHR as any);
router.get('/all', (0, checkPermissions_1.checkPermission)("HREmployee", "view"), onBoardingController_1.getAllHREmployees);
router.post('/', (0, checkPermissions_1.checkPermission)("Onboarding", "create"), onBoardingController_1.createOnboarding);
router.get('/onboarding', (0, checkPermissions_1.checkPermission)("Onboarding", "view"), onBoardingController_1.getAllOnboardings);
router.get('/onboarding/:id', (0, checkPermissions_1.checkPermission)("Onboarding", "view"), onBoardingController_1.getOnboardingById);
router.put('/onboarding/:id', (0, checkPermissions_1.checkPermission)("Onboarding", "update"), onBoardingController_1.updateOnboarding);
router.delete('/onboarding/:id', (0, checkPermissions_1.checkPermission)("Onboarding", "delete"), onBoardingController_1.deleteOnboarding);
router.get('/onboarding/not-onboarded', (0, checkPermissions_1.checkPermission)("NotOnboarding", "view"), onBoardingController_1.getNotOnboardedEmployees);
router.put('/resignation/process/:id', (0, checkPermissions_1.checkPermission)("Resignation", "approve"), resignationController_1.processResignation);
router.put('/resignation/edit/:id', (0, checkPermissions_1.checkPermission)("Onboarding", "approve"), resignationController_1.updateClearanceStatus);
exports.default = router;
